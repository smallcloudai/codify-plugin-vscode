name: CI build

on:
  # Trigger the workflow on pushes to only the 'main' branch (this avoids duplicate checks being run e.g. for dependabot pull requests)
  push:
    branches: [main]
  # Trigger the workflow on any pull request
  pull_request:
  workflow_dispatch:

jobs:
  dist:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            code-target: win32-x64
          - os: windows-latest
            target: i686-pc-windows-msvc
            code-target: win32-ia32
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            code-target: win32-arm64
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            code-target: linux-x64
          - os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu
            code-target: linux-arm64
          - os: ubuntu-20.04
            target: arm-unknown-linux-gnueabihf
            code-target: linux-armhf
          - os: macos-11
            target: x86_64-apple-darwin
            code-target: darwin-x64
          - os: macos-11
            target: aarch64-apple-darwin
            code-target: darwin-arm64

    env:
      LLM_LS_TARGET: ${{ matrix.target }}

    name: dist (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
          
      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yml
          repo: smallcloudai/code-scratchpads
          branch: main 
          path: ./assets
          name: dist-${{ matrix.target }}

      - name: Install VSCE
        run: |
          npm install
          npm install -g @vscode/vsce

      - name: Pakckage VSCE extension
        run: |
          vsce package --target ${{ matrix.code-target }}
      #
      # - name: Update apt repositories
      #   if: matrix.target == 'aarch64-unknown-linux-gnu' || matrix.target == 'arm-unknown-linux-gnueabihf'
      #   run: sudo apt-get update

      # - name: Install AArch64 target toolchain
      #   if: matrix.target == 'aarch64-unknown-linux-gnu'
      #   run: sudo apt-get install gcc-aarch64-linux-gnu

      # - name: Install ARM target toolchain
      #   if: matrix.target == 'arm-unknown-linux-gnueabihf'
      #   run: sudo apt-get install gcc-multilib-arm-linux-gnueabihf


      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: vscode-plugin-${{ matrix.target }}
          path: ./*.vsix

  # dist-x86_64-unknown-linux-musl:
  #   name: dist (x86_64-unknown-linux-musl)
  #   runs-on: ubuntu-latest
  #   env:
  #     LLM_LS_TARGET: x86_64-unknown-linux-musl
  #     # For some reason `-crt-static` is not working for clang without lld
  #     RUSTFLAGS: "-C link-arg=-fuse-ld=lld -C target-feature=-crt-static"
  #   container:
  #     image: rust:alpine
  #     volumes:
  #       - /usr/local/cargo/registry:/usr/local/cargo/registry

  #   steps:
  #     - name: Install dependencies
  #       run: apk add --no-cache git clang lld musl-dev nodejs npm openssl-dev pkgconfig g++

  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: ${{ env.FETCH_DEPTH }}

  #     - name: Dist
  #       run: cargo build --release --target-dir dist/

  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: dist-x86_64-unknown-linux-musl
  #         path: ./dist/release/code-scratchpads


  # publish:
  #   name: publish
  #   runs-on: ubuntu-latest
  #   needs: ["dist"]
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: ${{ env.FETCH_DEPTH }}

  #     - run: echo "HEAD_SHA=$(git rev-parse HEAD)" >> $GITHUB_ENV
  #     - run: 'echo "HEAD_SHA: $HEAD_SHA"'

  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: dist-aarch64-apple-darwin
  #         path: dist
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: dist-x86_64-apple-darwin
  #         path: dist
  #     # - uses: actions/download-artifact@v1
  #     #   with:
  #     #     name: dist-x86_64-unknown-linux-gnu
  #     #     path: dist
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: dist-x86_64-unknown-linux-musl
  #         path: dist
  #     # - uses: actions/download-artifact@v1
  #     #   with:
  #     #     name: dist-aarch64-unknown-linux-gnu
  #     #     path: dist
  #     # - uses: actions/download-artifact@v1
  #     #   with:
  #     #     name: dist-arm-unknown-linux-gnueabihf
  #     #     path: dist
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: dist-x86_64-pc-windows-msvc
  #         path: dist
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: dist-i686-pc-windows-msvc
  #         path: dist
  #     - uses: actions/download-artifact@v1
  #       with:
  #         name: dist-aarch64-pc-windows-msvc
  #         path: dist
  #     - run: ls -al ./dist

      # - name: Publish Release
      #   uses: ./.github/actions/github-release
      #   with:
      #     files: "dist/*"
      #     name: ${{ env.TAG }}
      #     token: ${{ secrets.GITHUB_TOKEN }}